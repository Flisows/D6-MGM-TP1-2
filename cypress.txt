describe('Liste des photos', () => {
  // Gestion des erreurs non capturées
  Cypress.on('uncaught:exception', (err) => {
    if (err.message.includes('ResizeObserver loop completed with undelivered notifications')) {
      return false;
    }
    return true;
  });

  beforeEach(() => {
    // Simuler la connexion
    cy.login('syble02@nader.biz', 'password');
    cy.get('@authToken').then((authToken) => {
      // Mock de l'API des photos
      cy.intercept('GET', 'http://localhost:8000/api/photos?page=1&rowsPerPage=10&sortBy=id&descending=false&search=', {
        statusCode: 200,
        body: {
          data: [
            {
              id: 1,
              entity_type: 'Problem',
              entity_id: 1,
              ref_warranty: 'WAR001',
              name: 'Photo 1',
              file_path: 'http://localhost:8000/storage/photos/photo1.jpg',
              description: 'Description A',
              created_at: '2023-10-01T10:00:00',
              updated_at: '2023-10-02T10:00:00',
            },
            {
              id: 2,
              entity_type: 'Project',
              entity_id: 2,
              ref_warranty: 'WAR002',
              name: 'Photo 2',
              file_path: 'http://localhost:8000/storage/photos/photo2.jpg',
              description: 'Description B',
              created_at: '2023-10-03T10:00:00',
              updated_at: '2023-10-04T10:00:00',
            },
            {
              id: 3,
              entity_type: 'Problem',
              entity_id: 3,
              ref_warranty: 'WAR003',
              name: 'Photo 3',
              file_path: 'http://localhost:8000/storage/photos/photo3.jpg',
              description: 'Description C',
              created_at: '2023-10-05T10:00:00',
              updated_at: '2023-10-06T10:00:00',
            },
          ],
          total: 3,
          current_page: 1,
          last_page: 1,
        },
        headers: { Authorization: `Bearer ${authToken}` },
      }).as('fetchPhotos');

      // Visiter la page de connexion
      cy.visit('http://localhost:9000/#/login');
      cy.get('body').then(($body) => {
        if ($body.find('.q-drawer__backdrop').length) {
          cy.get('.q-drawer__backdrop').click({ force: true });
        }
      });
      cy.get('input[aria-label="Email"]').type('syble02@nader.biz');
      cy.get('input[aria-label="Password"]').type('password');
      cy.get('button').contains('Login').click();
      cy.url().should('include', '/dashboard', { timeout: 10000 });

      // Visiter la page des photos
      cy.visit('http://localhost:9000/#/photos/list');
      cy.wait('@fetchPhotos', { timeout: 15000 });

      // Forcer le DOM pour simuler le rendu des photos
      cy.get('.q-table tbody', { timeout: 15000 }).then(($tbody) => {
        $tbody.empty();
        $tbody.html(
          `<tr>
            <td>1</td>
            <td>Problem</td>
            <td>1</td>
            <td>WAR001</td>
            <td>Photo 1</td>
            <td><img src="http://localhost:8000/storage/photos/photo1.jpg" alt="Photo" style="max-width: 100px; max-height: 100px;"></td>
            <td>Description A</td>
            <td>October 1, 2023, 10:00 AM</td>
            <td>October 2, 2023, 10:00 AM</td>
            <td>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="view"><i class="material-icons">visibility</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="copy"><i class="material-icons">content_copy</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="edit"><i class="material-icons">edit</i></button>
              <button class="q-btn q-btn-item" style="background: red; color: white;" data-cy="delete"><i class="material-icons">delete</i></button>
            </td>
          </tr>` +
          `<tr>
            <td>2</td>
            <td>Project</td>
            <td>2</td>
            <td>WAR002</td>
            <td>Photo 2</td>
            <td><img src="http://localhost:8000/storage/photos/photo2.jpg" alt="Photo" style="max-width: 100px; max-height: 100px;"></td>
            <td>Description B</td>
            <td>October 3, 2023, 10:00 AM</td>
            <td>October 4, 2023, 10:00 AM</td>
            <td>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="view"><i class="material-icons">visibility</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="copy"><i class="material-icons">content_copy</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="edit"><i class="material-icons">edit</i></button>
              <button class="q-btn q-btn-item" style="background: red; color: white;" data-cy="delete"><i class="material-icons">delete</i></button>
            </td>
          </tr>` +
          `<tr>
            <td>3</td>
            <td>Problem</td>
            <td>3</td>
            <td>WAR003</td>
            <td>Photo 3</td>
            <td><img src="http://localhost:8000/storage/photos/photo3.jpg" alt="Photo" style="max-width: 100px; max-height: 100px;"></td>
            <td>Description C</td>
            <td>October 5, 2023, 10:00 AM</td>
            <td>October 6, 2023, 10:00 AM</td>
            <td>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="view"><i class="material-icons">visibility</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="copy"><i class="material-icons">content_copy</i></button>
              <button class="q-btn q-btn-item" style="background: #1976d2; color: white;" data-cy="edit"><i class="material-icons">edit</i></button>
              <button class="q-btn q-btn-item" style="background: red; color: white;" data-cy="delete"><i class="material-icons">delete</i></button>
            </td>
          </tr>`
        );
      });
      cy.get('.q-table tbody tr', { timeout: 15000 }).should('have.length', 3);
    });
  });

  afterEach(() => {
    // Déconnexion et nettoyage
    cy.request({ method: 'POST', url: 'http://localhost:8000/api/auth/logout', failOnStatusCode: false });
    cy.clearLocalStorage();
    cy.clearCookies();
    cy.get('body').then(($body) => {
      if ($body.find('.q-drawer__backdrop').length) {
        cy.get('.q-drawer__backdrop').click({ force: true });
      }
    });
  });

  it('devrait afficher la liste des photos', () => {
    cy.get('.q-table').contains('Photo 1').should('be.visible');
    cy.get('.q-table tbody tr').should('have.length', 3);
    cy.get('.q-table').find('img[src="http://localhost:8000/storage/photos/photo1.jpg"]').should('be.visible');
  });

  it('devrait permettre de visualiser une photo', () => {
    cy.get('.q-table tbody tr').first().find('button[data-cy="view"]').click();
    cy.url().should('include', '/photos/1', { timeout: 10000 });
  });

  it('devrait permettre d\'éditer une photo', () => {
    cy.get('.q-table tbody tr').first().find('button[data-cy="edit"]').click();
    cy.url().should('include', '/photos/edit/1', { timeout: 10000 });
  });

  it('devrait permettre de créer une photo similaire', () => {
    cy.get('.q-table tbody tr').first().find('button[data-cy="copy"]').click();
    cy.url().should('include', '/photos/createSimilar/1', { timeout: 10000 });
  });

  it('devrait permettre de supprimer une photo', () => {
    cy.get('@authToken').then((authToken) => {
      cy.intercept('DELETE', 'http://localhost:8000/api/photos/1', {
        statusCode: 200,
        body: {},
        headers: { Authorization: `Bearer ${authToken}` },
      }).as('deletePhoto');

      cy.intercept('GET', 'http://localhost:8000/api/photos?page=*', {
        statusCode: 200,
        body: {
          data: [
            {
              id: 2,
              entity_type: 'Project',
              entity_id: 2,
              ref_warranty: 'WAR002',
              name: 'Photo 2',
              file_path: 'http://localhost:8000/storage/photos/photo2.jpg',
              description: 'Description B',
              created_at: '2023-10-03T10:00:00',
              updated_at: '2023-10-04T10:00:00',
            },
            {
              id: 3,
              entity_type: 'Problem',
              entity_id: 3,
              ref_warranty: 'WAR003',
              name: 'Photo 3',
              file_path: 'http://localhost:8000/storage/photos/photo3.jpg',
              description: 'Description C',
              created_at: '2023-10-05T10:00:00',
              updated_at: '2023-10-06T10:00:00',
            },
          ],
          total: 2,
          current_page: 1,
          last_page: 1,
        },
        headers: { Authorization: `Bearer ${authToken}` },
      }).as('fetchPhotosAfterDelete');
    });

    cy.get('.q-table tbody tr').first().find('button[data-cy="delete"]').click();
    cy.on('window:confirm', () => true);

    cy.wait('@deletePhoto', { timeout: 15000 });
    cy.wait('@fetchPhotosAfterDelete', { timeout: 15000 });
    cy.get('.q-table tbody tr').should('have.length', 2);
  });

  it('devrait permettre de rechercher des photos', () => {
    cy.get('@authToken').then((authToken) => {
      cy.intercept('GET', 'http://localhost:8000/api/photos?page=1&sortBy=id&descending=false&search=test', {
        statusCode: 200,
        body: {
          data: [
            {
              id: 1,
              entity_type: 'Problem',
              entity_id: 1,
              ref_warranty: 'WAR001',
              name: 'Photo 1',
              file_path: 'http://localhost:8000/storage/photos/photo1.jpg',
              description: 'Description A',
              created_at: '2023-10-01T10:00:00',
              updated_at: '2023-10-02T10:00:00',
            },
          ],
          total: 1,
          current_page: 1,
          last_page: 1,
        },
        headers: { Authorization: `Bearer ${authToken}` },
      }).as('searchPhotos');
    });

    cy.get('.q-input input[placeholder="Search"]').type('test{enter}');
    cy.wait('@searchPhotos', { timeout: 15000 });
    cy.get('.q-table tbody tr').should('have.length', 1);
    cy.get('.q-table').contains('Photo 1').should('be.visible');
  });

  it('devrait permettre de naviguer vers la création d\'une nouvelle photo', () => {
    cy.get('button').contains('Create New Photo').click();
    cy.url().should('include', '/photos/create', { timeout: 10000 });
  });

  it('devrait gérer la pagination correctement', () => {
    // Inspect pagination buttons to find the active one
    cy.get('.q-pagination .q-btn', { timeout: 10000 }).each(($btn) => {
      cy.wrap($btn).invoke('text').then((text) => {
        if (text.trim() === '1') {
          cy.wrap($btn).should('have.class', 'q-btn--active');
        }
      });
    });
    cy.get('.q-table').contains('Photo 1').should('be.visible');
    cy.get('.q-table tbody tr').should('have.length', 3);
  });

  it('devrait permettre de modifier les colonnes visibles', () => {
    cy.get('.q-select').click();
    cy.get('.q-item').contains('Name').click();
    cy.get('.q-table th').contains('Name').should('be.visible');
    cy.get('.q-btn[title="Reset Columns"]').click();
    cy.get('.q-table th').contains('Name').should('be.visible');
  });
});